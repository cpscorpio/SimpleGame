#!/usr/bin/env python

import sys
import os

def list_files_rec(root):
	res = []
	for cur_root, dirs, files in os.walk(root, followlinks=True):
		for file in files:
			res.append(os.path.join(cur_root, file))
	return res

def list_dirs_rec(root):
	res = []
	for cur_root, dirs, files in os.walk(root, followlinks=True):
		for dir in dirs:
			res.append(os.path.join(cur_root, dir))
	return res


def load_ignores(file):
	try:
		return [s.strip() for s in open(file, 'r').readlines()]
	except IOError:
		return []


def dump_sources(out, root):

	directoriesIndependent = []
	directoriesToIgnore = []

	allListFiles = []

	out.write("//this file is generated by refreshResIndex.py,DON'T edit it by yourself!!!!\n\n")

	out.write("var res = {")

	#print folder
	for dir in list_dirs_rec(root):
		print("dir : "+dir)
		shouldOutput = False
		folderName = ""

		for directory in directoriesIndependent:
			print( directory)
			if dir[-len(directory):] == directory:
				shouldOutput = True
				folderName = directory
				break

		if shouldOutput:
			rel = dir[len(root)+1:]
			out.write("\tfolder_" + folderName + " : \"res/" + rel + "/\"\n")

	for file in list_files_rec(root):
		if file[-6:] == ".plist" or file[-4:] == ".png" or file[-11:] == ".ExportJson" or file[-4:] == ".tmx" or file[-4:] == ".mp3" or file[-5:] == ".json" or file[-6:] == ".proto":
			dir = os.path.dirname(file)
			file_name = os.path.split(file)[1]
			file_name_without_ext = os.path.splitext(file_name)[0]+"_"+os.path.splitext(file_name)[1][1:]

			shouldOutput = True
			for directory in directoriesToIgnore:
				print "Comparing to: " + directory
				print "Result: " + str( file.find( directory ) )
				if file.find( directory ) >= 0:
					shouldOutput = False
					break

			if shouldOutput:
				rel = file[len(root)+1:]
				if len(allListFiles) > 0:
					out.write(",")
				out.write("\n\t" + file_name_without_ext + " : \"res/" + rel + "\"")
				allListFiles.append(file_name_without_ext)
	out.write("\n};\n")
	out.write("\n\n var g_resources = [")

	for index in range( len( allListFiles)):
		if index > 0:
			out.write(",")
		out.write("\n\tres." + allListFiles[index] + "")
	out.write("\n];")


def main(root):
	# root = root+"/"
	print(root)
	out_name = "src/resource.js"
	try:
		out = open(os.path.join(root, out_name), 'w')
	except IOError:
		sys.exit("Couldn't open '%s' for writing!" % out_name)
	dump_sources(out, root+"/res")
	out.write("\n")

if __name__ == "__main__":
	main(os.path.dirname(os.path.abspath( __file__ )))

